---
import type { MarkdownLayoutProps } from "astro";
import { Navigation, Footer, GridContainer } from "@components";
import CommonUtils from "@util/CommonUtils";
import LanguageUtils from "@util/LanguageUtils";
import type { IMenuMarkdown } from "@interfaces/IMenu";
import "../../base.css";

type Props = MarkdownLayoutProps<{
  title: string;
  footerGrey?: boolean;
  darkNavigation?: boolean;
}>;

const { frontmatter } = Astro.props;
const path = Astro.url.pathname;
const baseUrl = CommonUtils.getBaseUrl(true);

const localeFromUrl = LanguageUtils.getLocaleFromUrl(Astro.url, baseUrl);

const rawMenus = await Astro.glob<IMenuMarkdown>("../pages/**/_menu.mdx");

const translatedMenu = rawMenus?.find((rawMenu) =>
  rawMenu?.url
    ?.split("/")
    .filter(Boolean)
    .map((urlPart) => urlPart.toLowerCase())
    .includes(localeFromUrl)
)?.frontmatter?.menu;

const translatedAndRebasedMenu = translatedMenu?.map((menuItem) => ({
  ...menuItem,
  target: baseUrl === "/" ? menuItem.target : baseUrl + menuItem.target,
}));

const isProduction = import.meta.env.MODE === "production";
---

<!doctype html>
<html lang={localeFromUrl} class="scroll-smooth h-full">
  <head>
    <base href={baseUrl} />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href={"/favicon.png"} />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="The Tolocar project sends mobile makerspaces into Ukraine to help, empower, equip and train local communities through open technology, knowledge and innovation."
    />
    <meta name="keywords" content="tolocar, makerspaces, ukraine" />
    {
      isProduction && (
        <script
          async
          defer
          data-website-id="7642c494-7e60-4564-952b-5d0d33e7c16b"
          src="https://analytics.fabcity.hamburg/script.js"
        />
      )
    }
    <title>{frontmatter?.title} - Tolocar Project</title>
  </head>
  <body class="w-full font-inter antialiased h-full tracking-[-0.02em]">
    <main class="h-full overflow-x-hidden">
      <Navigation
        baseUrl={baseUrl}
        path={path}
        menu={translatedAndRebasedMenu}
        locale={localeFromUrl}
        dark={frontmatter?.darkNavigation || false}
        client:only="react"
      />
      <slot />
      <Footer
        locale={localeFromUrl}
        menu={translatedAndRebasedMenu}
        className={frontmatter?.footerGrey ? "!bg-neutral-50" : ""}
      />
    </main>
  </body>
</html>
